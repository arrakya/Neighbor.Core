<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converters="clr-namespace:Neighbor.Mobile.Converters"
             xmlns:behaviors="clr-namespace:Neighbor.Mobile.Behaviors"
             x:Class="Neighbor.Mobile.Views.ResetPasswordPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InvertBooleanConverter x:Key="invertBooleanConverter" />
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            
            <Label Text="Set Password"
                   Margin="0,40,0,10"
                   Style="{StaticResource Title}"
                   VerticalOptions="CenterAndExpand" 
                   HorizontalOptions="CenterAndExpand" />
            
            <!-- New Password Entry -->
            <Entry Grid.Row="1"
                   IsPassword="True" 
                   Placeholder="New Password"
                   Margin="20,20,20,0"
                   Text="{Binding NewPassword.Value}"
                   IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateNewPasswordCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding NewPassword.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label Grid.Row="2" Text="{Binding NewPassword.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <!-- Confirm Password Entry -->
            <Entry Grid.Row="3"
                   IsPassword="True" 
                   Placeholder="Confirm password"
                   Margin="20,0,20,0"
                   Text="{Binding ConfirmPassword.Value}"
                   IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateConfirmPasswordCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding ConfirmPassword.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label Grid.Row="4" Text="{Binding ConfirmPassword.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <ActivityIndicator Grid.Row="5" 
                               Grid.RowSpan="2" 
                               IsVisible="{Binding IsBusy}" 
                               IsRunning="True"></ActivityIndicator>
            <Button Grid.Row="5"
                    Text="Submit"
                    Margin="20"
                    Command="{Binding SubmitCommand}"
                    IsVisible="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}"></Button>
            <Button Grid.Row="6"
                    Text="Cancel"                    
                    Margin="20,10,20,0"
                    Command="{Binding CancelCommand}"
                    Style="{StaticResource SecondaryButton}"
                    IsVisible="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}"></Button>
            
        </Grid>
    </ContentPage.Content>
</ContentPage>