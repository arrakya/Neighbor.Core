<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converters="clr-namespace:Neighbor.Mobile.Converters"
             xmlns:behaviors="clr-namespace:Neighbor.Mobile.Behaviors"
             x:Class="Neighbor.Mobile.Views.RegisterPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InvertBooleanConverter x:Key="invertBooleanConverter" />
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid VerticalOptions="Fill"
              Margin="10,30,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="100*"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Text="Register new user"
                VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand"
                Margin="0,0,0,20"
                FontSize="Title"/>

            <!-- UserName Entry -->
            <Entry Grid.Row="1" Text="{Binding UserName.Value}" Placeholder="Username" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateUserNameCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding UserName.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="2" Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <!-- Password Entry -->
            <Entry Grid.Row="3" Text="{Binding Password.Value}" Placeholder="Password" IsPassword="True" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidatePasswordCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding Password.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="4" Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />
            
            <!-- RePassword Entry -->
            <Entry Grid.Row="5" Text="{Binding RePassword.Value}" Placeholder="Re-Password" IsPassword="True" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}" >
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateRePasswordCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding RePassword.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="6" Text="{Binding RePassword.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <!-- Email Entry -->
            <Entry Grid.Row="7" Text="{Binding Email.Value, Mode=TwoWay}" Placeholder="Email" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateEmailCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding Email.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="8" Text="{Binding Email.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <!-- Phone Entry -->
            <Entry Grid.Row="9" Text="{Binding Phone.Value}" Placeholder="Phone" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}" >
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidatePhoneCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding Phone.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="10" Text="{Binding Phone.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />
            
            <!-- House Number -->
            <Entry Grid.Row="11" Text="{Binding HouseNumber.Value}" Placeholder="House Number" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}">
                <Entry.Behaviors>
                    <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateHouseNumberCommand}"></behaviors:EventToCommandBehavior>
                </Entry.Behaviors>
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding HouseNumber.IsValid}" Value="False">
                        <Setter Property="TextColor" Value="{StaticResource ErrorColor}"></Setter>
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Label  Grid.Row="12" Text="{Binding HouseNumber.Errors, Converter={StaticResource FirstValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

            <StackLayout Grid.Row="13" VerticalOptions="EndAndExpand">
                <Button Text="Submit" Command="{Binding SubmitCommand}" IsVisible="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}"></Button>
                <ActivityIndicator HorizontalOptions="Center" IsRunning="True" IsVisible="{Binding IsBusy}"></ActivityIndicator>
                <Button Text="Cancel" BackgroundColor="Gray" Command="{Binding CancelCommand}" IsVisible="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}" IsEnabled="{Binding IsBusy, Converter={StaticResource invertBooleanConverter}}" ></Button>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>