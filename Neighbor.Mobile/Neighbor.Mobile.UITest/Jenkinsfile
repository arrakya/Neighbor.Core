properties(
    [
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5'))
    ]
)

pipeline {
    agent any

    parameters{
            string(defaultValue: '/home/arrak/neighbor/apks/com.companyname.neighbor.mobile.apk', description: 'APK Path', name: 'apkPath')
            string(defaultValue: '192.168.1.58', description: 'Device IP Address to run test', name: 'deviceIPAddress')
    }

    stages {
        stage('Code Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'develop']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GitHub', url: 'https://github.com/arrakya/Neighbor.Core.git']]])
            }
        }        
        stage('Build Test Library') {
            steps {
                script {
                    sh "docker run --rm -v ${workspace}:/app -v ${workspace}/output:/output mcr.microsoft.com/dotnet/sdk:5.0-alpine3.12 dotnet build -c Release -r windows-x86 -o /output /app/Neighbor.Mobile/Neighbor.Mobile.UITest/Neighbor.Mobile.UITest.csproj"
                }
            }
        }
        stage('Connect to Device'){
            steps {
                script {
                    sh "adb connect ${params.deviceIPAddress}"
                }
            }
        }
        stage('Start UI Test') {
            steps {
                script {
                    sh """
                        mono /usr/bin/nunit/nunit3-console.exe ${workspace}/output/Neighbor.Mobile.UITest.dll \
                            --test=Neighbor.Mobile.UITest.Tests\\(Android\\) \
                            --testparam=apkPath=${params.apkPath}
                    """
                }
            }
        }
    }
}
