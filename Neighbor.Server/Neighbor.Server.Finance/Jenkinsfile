pipeline {
    agent any

    parameters {
        string(defaultValue: 'develop', description: 'Branch', name: 'BRANCH')
        string(defaultValue: 'sit', description: 'Configuration Environment', name: 'ENV')
    }

    stages {
        stage('Code Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: "${params.BRANCH}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GitHub', url: 'https://github.com/arrakya/Neighbor.Core.git']]])
            }
        }    
        stage('Build Finance Image') {
            steps {
                script {
                    sh "docker build -f ./Neighbor.Server/Neighbor.Server.Finance/Dockerfile -t arrak/neighbor.server.finance:${params.ENV}-latest . --build-arg EnvName=${params.ENV.toUpperCase()} --no-cache"
                }
            }
        }
        stage('Start Finance Service') {
            steps {
                script {
                     catchError {
                        sh "docker container rm web-finance-${params.ENV} --force"
                    }
                    sh "docker-compose -f ./Neighbor.Server/docker-compose.yml up -d web-finance-${params.ENV}"
                }
            }
        }
    }
}
